// <auto-generated />
using System;
using Aniquota.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aniquota.Domain.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Aniquota.Domain.Models.Aplica", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAplica")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataResgate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("ValorAplicado")
                        .HasColumnType("float");

                    b.HasKey("IdCliente", "IdProduto", "DataAplica");

                    b.HasIndex("IdProduto");

                    b.ToTable("Aplica");
                });

            modelBuilder.Entity("Aniquota.Domain.Models.AplicaProdutoClienteModel", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAplica")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Nome")
                        .HasColumnType("int");

                    b.Property<float>("Rendimento")
                        .HasColumnType("float");

                    b.Property<float>("ValorAplicado")
                        .HasColumnType("float");

                    b.Property<float>("ValorAtual")
                        .HasColumnType("float");

                    b.HasKey("IdCliente", "IdProduto", "DataAplica");

                    b.ToTable((string)null);

                    b.ToView("aplicaprodutoclientemodel", (string)null);
                });

            modelBuilder.Entity("Aniquota.Domain.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdCliente");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Aniquota.Domain.Models.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Rendimento")
                        .HasColumnType("float");

                    b.HasKey("IdProduto");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Aniquota.Domain.Models.Telefone", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("IdCliente", "Tel");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("Aniquota.Domain.Models.Aplica", b =>
                {
                    b.HasOne("Aniquota.Domain.Models.Cliente", "Cliente")
                        .WithMany("Aplicas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aniquota.Domain.Models.Produto", "Produto")
                        .WithMany("Aplicas")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Aniquota.Domain.Models.Telefone", b =>
                {
                    b.HasOne("Aniquota.Domain.Models.Cliente", "Cliente")
                        .WithMany("Telefones")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Aniquota.Domain.Models.Cliente", b =>
                {
                    b.Navigation("Aplicas");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("Aniquota.Domain.Models.Produto", b =>
                {
                    b.Navigation("Aplicas");
                });
#pragma warning restore 612, 618
        }
    }
}
